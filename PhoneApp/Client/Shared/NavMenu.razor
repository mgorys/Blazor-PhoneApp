@inject ICategoryService CategoryService
@inject IProductService ProductService

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">PhoneApp</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarColor01">
      <ul class="navbar-nav me-auto">
        <li class="nav-item">
          <a class="nav-link" href="#">Home
          </a>
        </li>
        
        <li class="nav-item">
          <a class="nav-link" href="/counter">About </a>
           
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Categories
               
          </a>
          <div class="dropdown-menu">

                @foreach (var category in CategoryService.Categories)
        {
        
                
            <a class="dropdown-item">
                <NavLink class="dropdown-item" href="@category.Url">
                    @category.Name
                </NavLink>
            </a>
            
        }
            
           </div>
        </li>
      </ul>
      <form class="d-flex">
        <input class="form-control me-sm-2" type="text" placeholder="Search">
        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
      </form>
    </div>
  </div>
</nav>




@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
        await ProductService.GetProducts();
    }

}
